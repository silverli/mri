{"version":3,"file":"commons-ff783c365dd27b493007.js","mappings":"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","sources":["webpack://gatsby-starter-contentful-homepage/./src/components/ui.css.ts","webpack://gatsby-starter-contentful-homepage/./node_modules/camelcase/index.js","webpack://gatsby-starter-contentful-homepage/../src/image-utils.ts","webpack://gatsby-starter-contentful-homepage/../src/components/hooks.ts","webpack://gatsby-starter-contentful-homepage/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/picture.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/placeholder.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/main-image.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/static-image.server.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/static-image.tsx","webpack://gatsby-starter-contentful-homepage/./node_modules/is-absolute-url/index.js","webpack://gatsby-starter-contentful-homepage/./src/components/ui.js"],"sourcesContent":["import \"src/theme.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/theme.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE3WU21LCMBCG732KHbylTpKGHuKVWrljxhl9gYJFqkCxFfEwvrt/quNkt5ibki97SHb3x7VN80KfJ0RRdNgf9vlOOTpd9us8oBpUKzOdJCE1R2kMepUV2fUkpBZUKWuyNKSTnvoV0gS00MXlVRHS9GjcDNQmNjd5SPOjryh720SlLNvcUcTAwpHdvYXk3lHGSeVIJxwtHcWGowdHiQi1gqMRwWrcQJg9AgmrJyCZcw0mk27AZNat95VpG38VjnZAwvV5+NIWSMTqHBnh+DKsxx6VFY6vwxIdYMUH4s1Rysk7OsLJh6PRzR3dlttuNKYOn6ir2pqPMaZ7dNEuVvVrQ5frcvEE07Kty3U097vfzb/ukEExo1mzbcY0q7ZrfDbYdLtyUTFDKEOfJWxQdeyZ4cx6phmCJDiAGthDdeoH9kyZasMwlACaCZr386Z4hTWUAOGKuuu5776VtpBDJrum74ed1NBErKT3sm+mgA/D0dAr7y1Y7a8p2ONw0jSkkfslMNQBby9mL9/+96m5Nnkcq4vx35GPFp5p+3OWsTObxlM79f8yX9+cgipcNQUAAA==\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/ui.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/ui.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#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\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var avatar = 'ur0mb5k';\nexport var backgrounds = {primary:'ur0mb5h',muted:'ur0mb5i'};\nexport var blockLink = 'ur0mb5b';\nexport var blockquote = 'ur0mb5j';\nexport var box = {center:'ur0mb2r'};\nexport var buttons = {primary:'ur0mb5d ur0mb5c',reversed:'ur0mb5e ur0mb5c',link:'ur0mb5f ur0mb5c',linkReversed:'ur0mb5g ur0mb5c'};\nexport var container = 'ur0mb0';\nexport var containers = {normal:'ur0mb0',wide:'ur0mb2 ur0mb0',narrow:'ur0mb3 ur0mb0',tight:'ur0mb4 ur0mb0',fullbleed:'ur0mb5 ur0mb0'};\nexport var ctaLink = 'ur0mb5a';\nexport var debug = 'ur0mb5t';\nexport var flex = 'ur0mb6';\nexport var flexGap = {'0':'ur0mbj','1':'ur0mbk','2':'ur0mbl','3':'ur0mbm','4':'ur0mbn','5':'ur0mbo','6':'ur0mbp','-1':'ur0mbq','-2':'ur0mbr','-3':'ur0mbs','-4':'ur0mbt','-5':'ur0mbu','-6':'ur0mbv'};\nexport var flexVariants = {wrap:'ur0mb7',start:'ur0mb8',baseline:'ur0mb9',columnStart:'ur0mba',column:'ur0mbb',row:'ur0mbc',end:'ur0mbd',stretch:'ur0mbe',spaceBetween:'ur0mbf',center:'ur0mbg',responsive:'ur0mbh',responsiveReverse:'ur0mbi'};\nexport var gutter = {'0':'ur0mb27','1':'ur0mb28','2':'ur0mb29','3':'ur0mb2a','4':'ur0mb2b','5':'ur0mb2c','6':'ur0mb2d','-1':'ur0mb2e','-2':'ur0mb2f','-3':'ur0mb2g','-4':'ur0mb2h','-5':'ur0mb2i','-6':'ur0mb2j'};\nexport var iconLink = 'ur0mb5q';\nexport var icons = {small:'ur0mb5n',medium:'ur0mb5o',large:'ur0mb5p'};\nexport var interactiveIcon = 'ur0mb5r';\nexport var link = 'ur0mb57';\nexport var list = 'ur0mb13';\nexport var logos = {small:'ur0mb5l',medium:'ur0mb5m'};\nexport var margin = {'0':'ur0mb2t','1':'ur0mb2u','2':'ur0mb2v','3':'ur0mb2w','4':'ur0mb2x','5':'ur0mb2y','6':'ur0mb2z','-1':'ur0mb30','-2':'ur0mb31','-3':'ur0mb32','-4':'ur0mb33','-5':'ur0mb34','-6':'ur0mb35',auto:'ur0mb36'};\nexport var margin0 = 'ur0mb4r';\nexport var marginBottom = {'0':'ur0mb4d','1':'ur0mb4e','2':'ur0mb4f','3':'ur0mb4g','4':'ur0mb4h','5':'ur0mb4i','6':'ur0mb4j','-1':'ur0mb4k','-2':'ur0mb4l','-3':'ur0mb4m','-4':'ur0mb4n','-5':'ur0mb4o','-6':'ur0mb4p',auto:'ur0mb4q'};\nexport var marginLeft = {'0':'ur0mb37','1':'ur0mb38','2':'ur0mb39','3':'ur0mb3a','4':'ur0mb3b','5':'ur0mb3c','6':'ur0mb3d','-1':'ur0mb3e','-2':'ur0mb3f','-3':'ur0mb3g','-4':'ur0mb3h','-5':'ur0mb3i','-6':'ur0mb3j',auto:'ur0mb3k'};\nexport var marginRight = {'0':'ur0mb3l','1':'ur0mb3m','2':'ur0mb3n','3':'ur0mb3o','4':'ur0mb3p','5':'ur0mb3q','6':'ur0mb3r','-1':'ur0mb3s','-2':'ur0mb3t','-3':'ur0mb3u','-4':'ur0mb3v','-5':'ur0mb3w','-6':'ur0mb3x',auto:'ur0mb3y'};\nexport var marginTop = {'0':'ur0mb3z','1':'ur0mb40','2':'ur0mb41','3':'ur0mb42','4':'ur0mb43','5':'ur0mb44','6':'ur0mb45','-1':'ur0mb46','-2':'ur0mb47','-3':'ur0mb48','-4':'ur0mb49','-5':'ur0mb4a','-6':'ur0mb4b',auto:'ur0mb4c'};\nexport var marginY = {'0':'ur0mb1u','1':'ur0mb1v','2':'ur0mb1w','3':'ur0mb1x','4':'ur0mb1y','5':'ur0mb1z','6':'ur0mb20','-1':'ur0mb21','-2':'ur0mb22','-3':'ur0mb23','-4':'ur0mb24','-5':'ur0mb25','-6':'ur0mb26'};\nexport var media = {xsmall:'screen and (min-width: 31.25em)',small:'screen and (min-width: 40em)',medium:'screen and (min-width: 52em)',large:'screen and (min-width: 64em)'};\nexport var navButtonlink = 'ur0mb59';\nexport var navlink = 'ur0mb58';\nexport var order = {'0':'ur0mb2n','1':'ur0mb2o','2':'ur0mb2p','3':'ur0mb2q'};\nexport var padding = {'0':'ur0mb14','1':'ur0mb15','2':'ur0mb16','3':'ur0mb17','4':'ur0mb18','5':'ur0mb19','6':'ur0mb1a','-1':'ur0mb1b','-2':'ur0mb1c','-3':'ur0mb1d','-4':'ur0mb1e','-5':'ur0mb1f','-6':'ur0mb1g'};\nexport var paddingY = {'0':'ur0mb1h','1':'ur0mb1i','2':'ur0mb1j','3':'ur0mb1k','4':'ur0mb1l','5':'ur0mb1m','6':'ur0mb1n','-1':'ur0mb1o','-2':'ur0mb1p','-3':'ur0mb1q','-4':'ur0mb1r','-5':'ur0mb1s','-6':'ur0mb1t'};\nexport var radii = {button:'ur0mb2k',large:'ur0mb2l',circle:'ur0mb2m'};\nexport var section = 'ur0mb2s';\nexport var text = {body:'ur0mb4s ur0mb4r',lead:'ur0mb4t ur0mb4r',superHeading:'ur0mb4u ur0mb4r',heading:'ur0mb4v ur0mb4r',subhead:'ur0mb4w ur0mb4r',subheadSmall:'ur0mb4x ur0mb4r',kicker:'ur0mb4y ur0mb4r',caps:'ur0mb4z ur0mb4r',stat:'ur0mb50 ur0mb4r',statLabel:'ur0mb51 ur0mb4r',small:'ur0mb52 ur0mb4r',medium:'ur0mb53 ur0mb4r',mega:'ur0mb54 ur0mb4r',center:'ur0mb55',bold:'ur0mb56'};\nexport var visuallyHidden = 'ur0mb5s';\nexport var widths = {full:'ur0mbw',half:'ur0mbx',quarter:'ur0mby',third:'ur0mbz',twothirds:'ur0mb10',forty:'ur0mb11',fitContent:'ur0mb12'};","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n","import { Link as GatsbyLink } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport isAbsoluteURL from \"is-absolute-url\"\nimport * as React from \"react\"\nimport * as styles from \"./ui.css\"\n\nexport const cx = (...args) => args.filter(Boolean).join(\" \")\n\nexport function Base({\n  as: Component = \"div\",\n  cx: _cx = [],\n  className,\n  ...props\n}) {\n  return <Component className={cx(..._cx, className)} {...props} />\n}\n\nexport function Container({ width = \"normal\", ...props }) {\n  return <Base cx={[styles.containers[width]]} {...props} />\n}\n\nexport function Flex({\n  variant,\n  gap = 3,\n  gutter,\n  wrap,\n  responsive,\n  marginY,\n  alignItems,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.flex,\n        variant && styles.flexVariants[variant],\n        responsive && styles.flexVariants.responsive,\n        wrap && styles.flexVariants.wrap,\n        gutter && styles.gutter[gutter],\n        gutter ? styles.flexGap[0] : styles.flexGap[gap],\n        marginY && styles.marginY[marginY],\n        alignItems && styles.flexVariants[alignItems],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Box({\n  width = \"full\",\n  background,\n  padding,\n  paddingY,\n  radius,\n  center = false,\n  order,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.widths[width],\n        background && styles.backgrounds[background],\n        padding && styles.padding[padding],\n        paddingY && styles.paddingY[paddingY],\n        radius && styles.radii[radius],\n        center && styles.box.center,\n        order && styles.order[order],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function FlexList(props) {\n  return <Flex as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function List(props) {\n  return <Base as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function Space({ size = \"auto\", ...props }) {\n  return <Base cx={[styles.margin[size]]} {...props} />\n}\n\nexport function Nudge({ left, right, top, bottom, ...props }) {\n  return (\n    <Base\n      cx={[\n        left && styles.marginLeft[-left],\n        right && styles.marginRight[-right],\n        top && styles.marginTop[-top],\n        bottom && styles.marginBottom[-bottom],\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Section(props) {\n  return <Box as=\"section\" className={styles.section} {...props} />\n}\n\nexport function Text({\n  variant = \"body\",\n  center = false,\n  bold = false,\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.text[variant],\n        center && styles.text.center,\n        bold && styles.text.bold,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function SuperHeading({ ...props }) {\n  return <Text as=\"h1\" variant=\"superHeading\" {...props} />\n}\n\nexport function Heading({ ...props }) {\n  return <Text as=\"h2\" variant=\"heading\" {...props} />\n}\n\nexport function Subhead({ ...props }) {\n  return <Text as=\"h3\" variant=\"subhead\" {...props} />\n}\n\nexport function Kicker({ ...props }) {\n  return <Text variant=\"kicker\" {...props} />\n}\n\nexport function Link({ to, href, ...props }) {\n  const url = href || to || \"\"\n  if (isAbsoluteURL(url)) {\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a href={url} className={styles.link} {...props} />\n    )\n  }\n  return <GatsbyLink to={url} className={styles.link} {...props} />\n}\n\nexport function NavLink({ ...props }) {\n  return <Base as={Link} cx={[styles.navlink]} {...props} />\n}\n\nexport function NavButtonLink({ ...props }) {\n  return <Base as=\"button\" cx={[styles.navButtonlink]} {...props} />\n}\n\nexport function Button({ variant = \"primary\", ...props }) {\n  return <Base as={Link} cx={[styles.buttons[variant]]} {...props} />\n}\n\nexport function ButtonList({ links = [], reversed = false, ...props }) {\n  const getVariant = (i) => {\n    if (reversed) {\n      return i === 0 ? \"reversed\" : \"linkReversed\"\n    }\n    return i === 0 ? \"primary\" : \"link\"\n  }\n  return (\n    <FlexList marginY={4} {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <Button href={link.href} variant={getVariant(i)}>\n              {link.text}\n            </Button>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function CTALink(props) {\n  return <Base as={Link} cx={[styles.ctaLink]} {...props} />\n}\n\nexport function LinkList({ links = [], ...props }) {\n  return (\n    <FlexList {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <CTALink href={link.href}>{link.text}</CTALink>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function Blockquote(props) {\n  return <Base as=\"blockquote\" cx={[styles.blockquote]} {...props} />\n}\n\nexport function Avatar({ alt, image }) {\n  return (\n    <GatsbyImage alt={alt} image={getImage(image)} className={styles.avatar} />\n  )\n}\n\nexport function Logo({ alt, image, size = \"small\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.logos[size]}\n    />\n  )\n}\n\nexport function Icon({ alt, image, size = \"medium\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.icons[size]}\n    />\n  )\n}\n\nexport function IconLink(props) {\n  return <NavLink cx={[styles.iconLink]} {...props} />\n}\n\nexport function InteractiveIcon(props) {\n  return <Base as=\"button\" cx={[styles.interactiveIcon]} {...props} />\n}\n\nexport function VisuallyHidden(props) {\n  return <Base as=\"span\" cx={[styles.visuallyHidden]} {...props} />\n}\n\nexport function BlockLink(props) {\n  return <Link className={styles.blockLink} {...props} />\n}\n"],"names":["avatar","backgrounds","primary","muted","blockquote","box","center","buttons","reversed","link","linkReversed","containers","normal","wide","narrow","tight","fullbleed","ctaLink","flex","flexGap","flexVariants","wrap","start","baseline","columnStart","column","row","end","stretch","spaceBetween","responsive","responsiveReverse","gutter","iconLink","icons","small","medium","large","interactiveIcon","list","logos","margin","auto","marginBottom","marginLeft","marginRight","marginTop","marginY","media","xsmall","navButtonlink","navlink","order","padding","paddingY","radii","button","circle","section","text","body","lead","superHeading","heading","subhead","subheadSmall","kicker","caps","stat","statLabel","mega","bold","visuallyHidden","widths","full","half","quarter","third","twothirds","forty","fitContent","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","ABSOLUTE_URL_REGEX","WINDOWS_PATH_REGEX","cx","args","Base","_ref","Component","_cx","props","React","Object","assign","_toConsumableArray","Container","_ref2","styles","Flex","_ref3","variant","gap","alignItems","Box","_ref4","background","radius","FlexList","Space","size","Nudge","Section","Text","SuperHeading","Heading","_ref9","Subhead","_ref10","Kicker","_ref11","Link","_ref12","to","href","url","isAbsoluteURL","GatsbyLink","NavLink","_ref13","NavButtonLink","_ref14","Button","_ref15","ButtonList","_ref16","links","getVariant","id","CTALink","LinkList","_ref17","Blockquote","Avatar","_ref18","GatsbyImage","getImage","Logo","_ref19","Icon","_ref20","IconLink","InteractiveIcon","VisuallyHidden"],"sourceRoot":""}